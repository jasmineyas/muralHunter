{"ast":null,"code":"var _jsxFileName = \"/Users/jasminezou/Documents/BCS/Hackathon/nwPlus2025/placeGuesser/place-guesser/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst center = {\n  lat: 49.246292,\n  // Vancouver latitude\n  lng: -123.11934 // Vancouver longitude\n};\nconst Map = ({\n  activePlayer,\n  position\n}) => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    // Read the API\n    libraries\n  });\n  const [positions, setPositions] = useState([{\n    lat: null,\n    lng: null\n  }, {\n    lat: null,\n    lng: null\n  }]);\n\n  // Log updated positions whenever the state changes\n  useEffect(() => {\n    console.log(positions);\n  }, [positions]);\n\n  // Handle map clicks\n  const handleMapClick = event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    // setMarkerPosition(position); // Update marker position, single-player old code\n\n    setPositions(prevPositions => {\n      const updatedPositions = [...prevPositions];\n      updatedPositions[activePlayer - 1] = {\n        lat,\n        lng\n      }; // Update the active player's position\n      return updatedPositions;\n    });\n\n    // console.log(positions);\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps........\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 25\n  }, this);\n\n  //console.log({ isLoaded, loadError });\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 10,\n    center: center,\n    onClick: handleMapClick // Add click handler\n    ,\n    children: [activePlayer === 1 && positions[0].lat && /*#__PURE__*/_jsxDEV(Marker, {\n      position: positions[0],\n      icon: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), activePlayer === 2 && positions[1].lat && /*#__PURE__*/_jsxDEV(Marker, {\n      position: positions[1],\n      icon: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"OKY+GyJ+B4sIME0FcxR/vydnULk=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useLoadScript","Marker","jsxDEV","_jsxDEV","libraries","mapContainerStyle","width","height","center","lat","lng","Map","activePlayer","position","_s","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","positions","setPositions","console","log","handleMapClick","event","latLng","prevPositions","updatedPositions","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","onClick","icon","_c","$RefreshReg$"],"sources":["/Users/jasminezou/Documents/BCS/Hackathon/nwPlus2025/placeGuesser/place-guesser/src/Map.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\nconst center = {\n  lat: 49.246292, // Vancouver latitude\n  lng: -123.11934, // Vancouver longitude\n};\n\nconst Map = ({ activePlayer, position }) => {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY, // Read the API\n    libraries,\n  });\n\n  const [positions, setPositions] = useState([\n    { lat: null, lng: null },\n    { lat: null, lng: null },\n  ]);\n\n  // Log updated positions whenever the state changes\n  useEffect(() => {\n    console.log(positions);\n  }, [positions]);\n\n  // Handle map clicks\n  const handleMapClick = (event) => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    // setMarkerPosition(position); // Update marker position, single-player old code\n\n    setPositions((prevPositions) => {\n      const updatedPositions = [...prevPositions];\n      updatedPositions[activePlayer - 1] = { lat, lng }; // Update the active player's position\n      return updatedPositions;\n    });\n\n    // console.log(positions);\n  };\n\n  if (loadError) return <div>Error loading maps</div>;\n  if (!isLoaded) return <div>Loading Maps........</div>;\n\n  //console.log({ isLoaded, loadError });\n\n  return (\n    <GoogleMap\n      mapContainerStyle={mapContainerStyle}\n      zoom={10}\n      center={center}\n      onClick={handleMapClick} // Add click handler\n    >\n      {/* Render markers for Player 1 and Player 2 */}\n      {activePlayer === 1 && positions[0].lat && (\n        <Marker\n          position={positions[0]}\n          icon=\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n        />\n      )}\n      {activePlayer === 2 && positions[1].lat && (\n        <Marker\n          position={positions[1]}\n          icon=\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n        />\n      )}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jasminezou/Documents/BCS/Hackathon/nwPlus2025/placeGuesser/place-guesser/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, act } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst center = {\n  lat: 49.246292,\n  // Vancouver latitude\n  lng: -123.11934 // Vancouver longitude\n};\nconst Map = ({\n  activePlayer,\n  positions,\n  setPositions,\n  targetPosition,\n  mapMode\n}) => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    // Read the API\n    libraries\n  });\n\n  // Log updated positions whenever the state changes\n  useEffect(() => {\n    console.log(\"Updated positions:\", positions);\n  }, [positions]);\n\n  // Handle map clicks\n  const handleMapClick = event => {\n    console.log(\"Map clicked:\", event.latLng.toJSON());\n    console.log(\"activePlayer\", activePlayer);\n    console.log(mapMode);\n    if (mapMode === \"input\") {\n      const lat = event.latLng.lat();\n      const lng = event.latLng.lng();\n      // setMarkerPosition(position); // Update marker position, single-player old code\n      setPositions(prevPositions => {\n        const updatedPositions = [...prevPositions];\n        updatedPositions[activePlayer - 1] = {\n          lat,\n          lng\n        }; // Update the active player's position\n        return updatedPositions;\n      });\n      // console.log(positions);\n      console.log(`Player ${activePlayer} dropped a pin at:`, {\n        lat,\n        lng\n      });\n    }\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps........\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }, this);\n\n  //console.log({ isLoaded, loadError });\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 12,\n    center: center,\n    onClick: handleMapClick // Add click handler\n    ,\n    children: [mapMode === \"input\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [activePlayer === 1 && positions[0].lat && /*#__PURE__*/_jsxDEV(Marker, {\n        position: positions[0],\n        icon: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), activePlayer === 2 && positions[1].lat && /*#__PURE__*/_jsxDEV(Marker, {\n        position: positions[1],\n        icon: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), mapMode === \"result\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: targetPosition // Placeholder marker\n        ,\n        icon: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"eEuGuwq7VeZd0IJXXfL51YY3+Zk=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","act","GoogleMap","useLoadScript","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","libraries","mapContainerStyle","width","height","center","lat","lng","Map","activePlayer","positions","setPositions","targetPosition","mapMode","_s","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","console","log","handleMapClick","event","latLng","toJSON","prevPositions","updatedPositions","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","onClick","position","icon","_c","$RefreshReg$"],"sources":["/Users/jasminezou/Documents/BCS/Hackathon/nwPlus2025/placeGuesser/place-guesser/src/Map.js"],"sourcesContent":["import React, { useState, useEffect, act } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\nconst center = {\n  lat: 49.246292, // Vancouver latitude\n  lng: -123.11934, // Vancouver longitude\n};\n\nconst Map = ({\n  activePlayer,\n  positions,\n  setPositions,\n  targetPosition,\n  mapMode,\n}) => {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY, // Read the API\n    libraries,\n  });\n\n  // Log updated positions whenever the state changes\n  useEffect(() => {\n    console.log(\"Updated positions:\", positions);\n  }, [positions]);\n\n  // Handle map clicks\n  const handleMapClick = (event) => {\n    console.log(\"Map clicked:\", event.latLng.toJSON());\n    console.log(\"activePlayer\", activePlayer);\n    console.log(mapMode);\n    if (mapMode === \"input\") {\n      const lat = event.latLng.lat();\n      const lng = event.latLng.lng();\n      // setMarkerPosition(position); // Update marker position, single-player old code\n      setPositions((prevPositions) => {\n        const updatedPositions = [...prevPositions];\n        updatedPositions[activePlayer - 1] = { lat, lng }; // Update the active player's position\n        return updatedPositions;\n      });\n      // console.log(positions);\n      console.log(`Player ${activePlayer} dropped a pin at:`, { lat, lng });\n    }\n  };\n\n  if (loadError) return <div>Error loading maps</div>;\n  if (!isLoaded) return <div>Loading Maps........</div>;\n\n  //console.log({ isLoaded, loadError });\n\n  return (\n    <GoogleMap\n      mapContainerStyle={mapContainerStyle}\n      zoom={12}\n      center={center}\n      onClick={handleMapClick} // Add click handler\n    >\n      {/* Render markers for Player 1 and Player 2 */}\n      {mapMode === \"input\" && (\n        <>\n          {activePlayer === 1 && positions[0].lat && (\n            <Marker\n              position={positions[0]}\n              icon=\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n            />\n          )}\n          {activePlayer === 2 && positions[1].lat && (\n            <Marker\n              position={positions[1]}\n              icon=\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n            />\n          )}\n        </>\n      )}\n      {mapMode === \"result\" && (\n        <>\n          <Marker\n            position={targetPosition} // Placeholder marker\n            icon=\"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"\n          />\n        </>\n      )}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}